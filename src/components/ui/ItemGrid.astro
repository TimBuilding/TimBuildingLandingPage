---
import { twMerge } from 'tailwind-merge';
import type { ItemGrid as Props } from '~/types';
import Button from './Button.astro';

const { items = [], classes = {} } = Astro.props;

const {
  container: containerClass = '',
  panel: panelClass = '',
  description: descriptionClass = '',
  action: actionClass = '',
} = classes;
---

{
  items && (
    <div class={twMerge('', containerClass)}>
      <div class='grid grid-cols-3 max-w-sm mx-auto'>
        {items.map(({ title, description, callToAction, classes: itemClasses = {} }, index) => (
          <div>
            <div class={twMerge('flex flex-col items-center max-w-md', panelClass, itemClasses?.panel)}>
              <div class="mt-0.5">
                {title && <h3 class={twMerge('text-3xl sm:text-4xl font-bold')}>{title}</h3>}
                <div
                  class={twMerge(
                    'h-2 w-14 mx-auto mt-8',
                    index % 3 === 0 ? 'bg-primary' : index % 3 === 1 ? 'bg-yellow-500' : 'bg-[#00bcd4]'
                  )}
                />
                {description && (
                  <p
                    class={twMerge(
                      `${title ? 'mt-3' : ''} text-[#000000de] text-xl uppercase text-center`,
                      descriptionClass,
                      itemClasses?.description
                    )}
                    set:html={description}
                  />
                )}
                {callToAction && (
                  <div class={twMerge(`${title || description ? 'mt-3' : ''}`, actionClass, itemClasses?.actionClass)}>
                    <Button variant="link" {...callToAction} />
                  </div>
                )}
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  )
}
